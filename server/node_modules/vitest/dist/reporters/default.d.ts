import Listr from 'listr';
import { File, Reporter, RunnerContext, Task } from '../types';
interface TaskPromise {
    promise: Promise<void>;
    resolve: () => void;
    reject: (e: unknown) => void;
}
export declare class DefaultReporter implements Reporter {
    start: number;
    end: number;
    listr: Listr | null;
    listrPromise: Promise<void> | null;
    taskMap: Map<Task, TaskPromise>;
    onCollected(files: File[]): void;
    onTaskEnd(task: Task): void;
    onFinished(ctx: RunnerContext): Promise<void>;
    onWatcherStart(ctx: RunnerContext): Promise<void>;
    onWatcherRerun(files: string[], trigger: string): Promise<void>;
    onSnapshotUpdate(): void;
}
export {};
