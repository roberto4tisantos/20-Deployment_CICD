/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import path from 'path';
export const replaceRootDirInPath = (rootDir, filePath) => {
    if (!/^<rootDir>/.test(filePath))
        return filePath;
    return path.resolve(rootDir, path.normalize(`./${filePath.substr('<rootDir>'.length)}`));
};
export function replaceRootDirInObject(rootDir, config) {
    const newConfig = {};
    for (const configKey of Object.keys(config)) {
        newConfig[configKey]
            = configKey === 'rootDir'
                ? config[configKey]
                : _replaceRootDirTags(rootDir, config[configKey]);
    }
    return newConfig;
}
export function _replaceRootDirTags(rootDir, config) {
    if (config == null)
        return config;
    switch (typeof config) {
        case 'object':
            if (Array.isArray(config)) {
                /// can be string[] or {}[]
                return config.map(item => _replaceRootDirTags(rootDir, item));
            }
            if (config instanceof RegExp)
                return config;
            return replaceRootDirInObject(rootDir, config);
        case 'string':
            return replaceRootDirInPath(rootDir, config);
    }
    return config;
}
